Проект кинотеатр, сделанный на языке Java при помощи сервлетов.

Пройдемся по всему содержимому и всему функционалу по ТЗ:

- Система — інтернет вітрина кінотеатру з одним залом.

- В системі є Розклад показу фільмів на тиждень з 9:00 до 22:00 (початок останнього фільму) години.
    Приложение имеет несколько слоев валидации временни. Самые верхние - это атрибуты input time в HTML5,
    ниже - валидация в сущности и в сервисе при добавлении или изменении сеанса. Также было добавлено несколько условий:
    сеанс не может проходить во время другого сеанса (длительность фильма + 20 мин. рекламы + 20 мин. промежутка между
    сеансами (на уборку, проверку оборудования и т.д.)
    Также идет проверка на даты выставления сеансов - их нельзя выставить на прошедшее время и более чем на две недели
    вперед.
    Приложение имеет динамическую проверку актуальности сеансов - сеансы, время покаха чьих находится в прошлом
    удаляются из БД. Проверка на актуальность идет раз в N-минут.
- Незареєстрований користувач може бачити розклад, вільні місця в залі та має можливість зареєструватися.
    В приложении присутвует иерархия ролей (гость, пользователь и админ). Все, что умеет делать человек с более низкой
    ролью, может делать человек и с более высокой.
    Гость - незарегистрированный посетитель сайта. Он имеет право просмотра расписания сеансов, афиши фильмов,
    авторизации и регистрации, а также просмотра свободных мест определенного сеанса без возможности покупки.
- Зареєстрований користувач повинен мати можливість придбати квиток на обраний сеанс.
    Пользователь - авторизированный человек. Имеет возможность посетить свой личный кабить(Профиль), изменить некоторые
    данные, посмотреть приобретенные действующие билеты, написать комментарий к фильму и удалить (только свой)
    комментарий, а также приобрести билет.
    Пользователи имеют уникальные электронные почты и пароли, которые хешируются перед передачей в БД
    (с помощью sha1prng и соли)
    Пользователь имеет право приобрести не больше 6 билетов за раз. Каждый билет имеет свою стоимость, а пользователь
    свой баланс внутренней валюты - монетки. Баланс пополняется с имитацией банковской транзакции.
    Стоимость билеты высчитывается по специльной формуле равной :
    50 + 5 * ряд в билете + 5 * час показа сеанса + 20 если сеанс проходит в 3D.
    При недостатке средств пользователю дается возможность перевыбрать места на сеанс либо пополнить баланс.
    Также каждый фильм имеет свой возрастной рейтинг: если минимальный допустимый возраст больший за возраст
    пользователя, то последниму не дается возможность купить билет. Дата рождения является обязательным полей при
    регистрации, а также оно неизменяемо.
- Адміністратор може внести до розкладу новий фільм, скасувати фільм, переглянути відвідуваність залу.
    Администратор может добавлять изменять и удалять сеансы. При этом проходит проверка на сходимость во временные
    рамки, описанная выше.
    Также админ может удалить, добавить и изменить фильм. При этом он может добавить к нему картинку
    (только формата .jpg). И он может удалять любые комментарии
 - Користувачеві має бути доступне сортування записів в розкладі за назвою фільму,
 кількістю вільних місць,  датою/часом сеансу (за замовчуванням), а також фільтрація розкладу за доступними до перегляду фільмів.
    Есть странничка Сеансы, в которой находится табличка со всеми действующими сеансами. Ее можно отсортировать по дате,
    свободным местам и возможности заказа(если есть хотя бы 1 свободное место и, для авторизированных пользователей,
    подходящий возрастной рейтинг)
- Программа написана на одном сервлете с использованием архитектуры MVC.
    Контроллером является единственный сервлет, который перенаправляется на классы по шаблону Команда. Те делают определенную
    работу и возвращают итоговый путь на след страничку
    Бекендовская часть программы сделана в несколько слоев : с помощью паттернов DAO и Service. ДАО слой отвечает за доступ
    к БД, а сервис - за бизнес-логику программы. Все сущности в программе (Пользователь, фильм, сеанс и тд) используют шаблон
    Цепочка для настройки их полей.
    Фронтенд преимущественно написан на чистой привязке HTML/CSS/JS.
    Для создания и настройки слайдера была установлена в проект JS-библиотка splider.
- Для контейнера сервлетов был использован Apache Tomcat.
- Также присутвует локализация визуальной части (Рус/Англ)
- Пагинация реализована в нескольких таблицах

Для начала работы с приложением нужно :
    1) Создать БД, используя скрипт 1-create_DB.sql
    2) Создать все таблицы БД, используя скрипт 2-create_tables.sql
    3) Заполнить БД, используя скрипт 3-add_content.sql
    4) Сконфигурировать Томкат c начальной ссылкой на /controller?command=createFilmsPage
    5) Зарегистрировать двух пользователей (из-за хеширования добавить их с помощью скрипта нельзя)
        Желательно одного сделать 10-летним, чтоб проверить работу возрастного рейтинга.
    6) Дать одному в БД админ права
    7) Пользоваться с удовольствием
